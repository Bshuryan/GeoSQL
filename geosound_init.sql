-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema GeoSound
-- -----------------------------------------------------
-- DB Project

-- -----------------------------------------------------
-- Schema GeoSound
--
-- DB Project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GeoSound` DEFAULT CHARACTER SET utf8 ;
USE `GeoSound` ;

-- -----------------------------------------------------
-- Table `GeoSound`.`CITY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`CITY` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`CITY` (
  `CITY_ID` INT NOT NULL,
  `CITY_LAT` DOUBLE NOT NULL,
  `CITY_LONG` DOUBLE NOT NULL,
  `CITY_ZIPS` VARCHAR(45) NULL,
  `CITY_NAME` VARCHAR(45) NOT NULL,
  `CITY_STATE` VARCHAR(2) NULL,
  PRIMARY KEY (`CITY_ID`),
  UNIQUE INDEX `CITY_ID_UNIQUE` (`CITY_ID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`LOCATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`LOCATION` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`LOCATION` (
  `LOC_ID` INT NOT NULL,
  `LOC_STREET` VARCHAR(45) NULL,
  `LOC_ZIP` VARCHAR(10) NULL,
  `LOC_ADDR_NUM` VARCHAR(30) NULL,
  `CITY_ID` INT NOT NULL,
  PRIMARY KEY (`LOC_ID`),
  UNIQUE INDEX `idLOCATION_UNIQUE` (`LOC_ID` ASC) VISIBLE,
  INDEX `fk_LOCATION_CITY1_idx` (`CITY_ID` ASC) VISIBLE,
  CONSTRAINT `fk_LOCATION_CITY1`
    FOREIGN KEY (`CITY_ID`)
    REFERENCES `GeoSound`.`CITY` (`CITY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`USER` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`USER` (
  `USER_ID` INT NOT NULL,
  `USER_PASSWORD` VARCHAR(45) NOT NULL,
  `USER_EMAIL` VARCHAR(45) NOT NULL,
  `LOC_ID` INT NOT NULL,
  `USER_FNAME` VARCHAR(45) NOT NULL,
  `USER_LNAME` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`USER_ID`),
  UNIQUE INDEX `USER_ID_UNIQUE` (`USER_ID` ASC) VISIBLE,
  INDEX `fk_USER_LOCATION1_idx` (`LOC_ID` ASC) VISIBLE,
  UNIQUE INDEX `USER_EMAIL_UNIQUE` (`USER_EMAIL` ASC) VISIBLE,
  CONSTRAINT `fk_USER_LOCATION1`
    FOREIGN KEY (`LOC_ID`)
    REFERENCES `GeoSound`.`LOCATION` (`LOC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`SONG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`SONG` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`SONG` (
  `SONG_ID` INT NOT NULL,
  `SONG_NAME` VARCHAR(25) NOT NULL,
  `SONG_ARTIST` VARCHAR(25) NULL,
  `SONG_DURATION` VARCHAR(8) NULL,
  `SONG_GENRE` VARCHAR(15) NULL,
  `SONG_ALBUM` VARCHAR(45) NULL,
  `SONG_TIMES_PLAYED` INT NULL,
  UNIQUE INDEX `SONG_ID_UNIQUE` (`SONG_ID` ASC) VISIBLE,
  PRIMARY KEY (`SONG_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`PLAYLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`PLAYLIST` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`PLAYLIST` (
  `PLAYLIST_ID` INT NOT NULL,
  `USER_ID` INT NOT NULL,
  `PLAYLIST_DATE_CREATED` DATETIME NOT NULL,
  `PLAYLIST_DATE_MODIFIED` DATETIME NOT NULL,
  `PLAYLIST_NAME` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PLAYLIST_ID`),
  UNIQUE INDEX `idPLAYLIST_UNIQUE` (`PLAYLIST_ID` ASC) VISIBLE,
  INDEX `fk_PLAYLIST_USER1_idx` (`USER_ID` ASC) VISIBLE,
  UNIQUE INDEX `PLAYLIST_NAME_UNIQUE` (`PLAYLIST_NAME` ASC) VISIBLE,
  CONSTRAINT `fk_PLAYLIST_USER1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `GeoSound`.`USER` (`USER_ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`USER_PLAYING_SONG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`USER_PLAYING_SONG` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`USER_PLAYING_SONG` (
  `PLAY_ID` INT NOT NULL,
  `PLAY_TIME` DATETIME NULL,
  `SONG_ID` INT NOT NULL,
  `LOC_ID` INT NOT NULL,
  `USER_ID` INT NOT NULL,
  PRIMARY KEY (`PLAY_ID`),
  UNIQUE INDEX `idUSER_PLAYING_SONG_UNIQUE` (`PLAY_ID` ASC) VISIBLE,
  INDEX `fk_USER_PLAYING_SONG_SONG1_idx` (`SONG_ID` ASC) VISIBLE,
  INDEX `fk_USER_PLAYING_SONG_LOCATION1_idx` (`LOC_ID` ASC) VISIBLE,
  INDEX `fk_USER_PLAYING_SONG_USER1_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `fk_USER_PLAYING_SONG_SONG1`
    FOREIGN KEY (`SONG_ID`)
    REFERENCES `GeoSound`.`SONG` (`SONG_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_PLAYING_SONG_LOCATION1`
    FOREIGN KEY (`LOC_ID`)
    REFERENCES `GeoSound`.`LOCATION` (`LOC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_PLAYING_SONG_USER1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `GeoSound`.`USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeoSound`.`SONG_IN_PLAYLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeoSound`.`SONG_IN_PLAYLIST` ;

CREATE TABLE IF NOT EXISTS `GeoSound`.`SONG_IN_PLAYLIST` (
  `SIP_ID` INT NOT NULL,
  `PLAYLIST_ID` INT NOT NULL,
  `SONG_ID` INT NOT NULL,
  `SIP_DATE_ADDED` DATETIME NULL,
  `SIP_TIMES_PLAYED` INT NULL,
  PRIMARY KEY (`SIP_ID`),
  UNIQUE INDEX `idSONG_IN_PLAYLIST_UNIQUE` (`SIP_ID` ASC) VISIBLE,
  INDEX `fk_SONG_IN_PLAYLIST_PLAYLIST1_idx` (`PLAYLIST_ID` ASC) VISIBLE,
  INDEX `fk_SONG_IN_PLAYLIST_SONG1_idx` (`SONG_ID` ASC) VISIBLE,
  CONSTRAINT `fk_SONG_IN_PLAYLIST_PLAYLIST1`
    FOREIGN KEY (`PLAYLIST_ID`)
    REFERENCES `GeoSound`.`PLAYLIST` (`PLAYLIST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SONG_IN_PLAYLIST_SONG1`
    FOREIGN KEY (`SONG_ID`)
    REFERENCES `GeoSound`.`SONG` (`SONG_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
